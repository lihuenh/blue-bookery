services:
  mysql:
    image: mysql/mysql-server
    container_name: mysql
    env_file: ./.env
    environment:
      - MYSQL_USER=$MYSQLDB_USER
      - MYSQL_PASSWORD=$MYSQLDB_PASSWORD
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  frontend:
    image: lihuenh/blue-bookery:frontend
    container_name: frontend
    # environment:
    #   - VITE_API_URL=$SERVER_URL
    #   - VITE_PUBLIC_HOST=$PUBLIC_HOST
    ports:
      - '3000:3000'
      - '80:80'
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    image: lihuenh/blue-bookery:backend
    container_name: backend
    links:
      - mysql
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - MYSQLDB_HOST=$MYSQLDB_HOST
      - MYSQLDB_USER=$MYSQLDB_USER
      - MYSQLDB_PASSWORD=$MYSQLDB_PASSWORD
      - MYSQLDB_DATABASE=$MYSQLDB_DATABASE
      - MYSQLDB_DOCKER_PORT=$MYSQLDB_DOCKER_PORT
    depends_on:
      - mysql
    networks:
      - app-network

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - '8080:80'
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
